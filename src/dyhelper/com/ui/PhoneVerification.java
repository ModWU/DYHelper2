/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package dyhelper.com.ui;

import java.util.HashMap;
import java.util.Timer;
import java.util.TimerTask;

import org.json.JSONObject;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import cn.dianyou.nets.DYHttpUtils;
import cn.dianyou.nets.DYStringCallback;
import cn.dianyou.utils.DEncodingUtils;
import cn.dianyou.utils.FileManageUtils;
import dyhelper.com.bean.DeviceInfo;
import dyhelper.com.util.ActivityCollectorUtils;
import dyhelper.com.util.Constants;
import dyhelper.com.util.DeviceUtils;
import okhttp3.Call;
import xyz.monkeytong.hongbao.R;

public class PhoneVerification extends Activity {
    private Button btn_confirm;
    private EditText et_phone_number;
    private EditText et_vef_code;
    private String lastPhoneNumber;
    private String phoneNumber;
    private Toast toast;
    private Button tv_vef_resp;
    private String userId;
    private BroadcastReceiver vef_receiver;
    
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_lg_ph_ref);
        toast = Toast.makeText(this, "", 0);
        initViews();
        initEvents();
        obtainInfo();
        ActivityCollectorUtils.addActivity(Constants.Activitys.ACTIVITY_PHONE_VERIFICATION, this);
    }
    
    public void performBack(View v) {
        onBackPressed();
    }
    
    protected void onDestroy() {
        super.onDestroy();
        if(vef_receiver != null) {
            unregisterReceiver(vef_receiver);
        }
    }
    
    private void obtainInfo() {
        userId = getIntent().getStringExtra("userId");
        Log.i("INFO", "userId:" + userId);
        if(XYZApplication.deviceUtils == null) {
            phoneNumber = DeviceInfo.getInstance().getPhone_number();
        }
        if(XYZApplication.deviceUtils.phoneNumber == null) {
        	phoneNumber = DeviceInfo.getInstance().getPhone_number();
        }
   
        if(phoneNumber == null) {
            phoneNumber = "";
        }
        et_phone_number.setText(phoneNumber);
    }
    
    
    private View.OnClickListener onClickRefListener = new View.OnClickListener() {
		
		@Override
		public void onClick(View v) {
			switch(v.getId()) {
			case R.id.id_vef_resp:
				obtainRefCode();
				break;
				
			case R.id.id_confirm:
				confirm();
				break;
			}
			
		}
	};
    
    private void initEvents() {
        tv_vef_resp.setOnClickListener(onClickRefListener);
        btn_confirm.setOnClickListener(onClickRefListener);
        btn_confirm.setEnabled(false);
        et_vef_code.addTextChangedListener(new TextWatcher() {
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                if(s.length() <= 0) {
                    btn_confirm.setEnabled(false);
                    btn_confirm.setBackgroundColor(-0x77555556);
                    btn_confirm.setTextColor(0x66000000);
                    return;
                }
                if(!btn_confirm.isEnabled()) {
                    btn_confirm.setEnabled(true);
                    btn_confirm.setBackgroundColor(-0xe3366f);
                    btn_confirm.setTextColor(-0x1);
                }
            }
            
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
            }
            
            public void afterTextChanged(Editable s) {
            }
        });
        et_phone_number.addTextChangedListener(new TextWatcher() {
            
            
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
            }
            
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                if(s.length() <= 0) {
                    tv_vef_resp.setEnabled(false);
                    tv_vef_resp.setBackgroundColor(-0x77555556);
                    tv_vef_resp.setTextColor(0x66000000);
                    return;
                }
                if(!tv_vef_resp.isEnabled()) {
                    tv_vef_resp.setEnabled(true);
                    tv_vef_resp.setBackgroundColor(-0xe3366f);
                    tv_vef_resp.setTextColor(-0x1);
                }
            }
            
            public void afterTextChanged(Editable s) {
            }
        });
    }
    
    private void initViews() {
        et_phone_number = (EditText)findViewById(R.id.id_login_phone_number);
        et_vef_code = (EditText)findViewById(R.id.id_vef_code);
        tv_vef_resp = (Button)findViewById(R.id.id_vef_resp);
        btn_confirm = (Button)findViewById(R.id.id_confirm);
    }
    
    private String vefityPhoneNumber() {
        Editable editable = et_phone_number.getText();
        if((TextUtils.isEmpty(editable)) || (editable.toString().trim().equals(""))) {
            toast.setText("\u8bf7\u8f93\u5165\u624b\u673a\u53f7\u7801");
            toast.show();
            return null;
        }
        String phoneNum = editable.toString();
        if(!DeviceUtils.isMobile(phoneNum)) {
        	toast.setText("请输入正确的电话号码");
            toast.show();
            return null;
        }
        
        
        if(phoneNum == null) {
            toast.setText("\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u624b\u673a\u53f7\u7801");
            toast.show();
            return null;
        }
        return phoneNum;
    }
    
    private String vefityRefCode() {
        Editable editable = et_vef_code.getText();
        if((TextUtils.isEmpty(editable)) || (editable.toString().trim().equals(""))) {
            toast.setText("\u8bf7\u8f93\u5165\u9a8c\u8bc1\u7801");
            toast.show();
            return null;
        }
        return editable.toString();
    }
    
    private void obtainRefCode() {
        lastPhoneNumber = vefityPhoneNumber();
        if(lastPhoneNumber == null) {
            return;
        }
        lastPhoneNumber = DEncodingUtils.encoding(lastPhoneNumber, "UTF-8");
        userId = DEncodingUtils.encoding(userId, "UTF-8");
        DYHttpUtils.getInstance().post().url(Constants.Dianyou_url.URL_GET_PHONE).paramJSONType().addParams("Phone", lastPhoneNumber).addParams("Id", userId).build().execute(new DYStringCallback() {
            
            public void onError(Call call, Exception ex, int id) {
                Log.i("INFO", "obtainRefCode->ex:" + ex.toString());
                toast.setText("请求出现异常:" + ex.getMessage());
                toast.show();
            }
            
            public void onResponse(String data, int id) {
            	String str = DEncodingUtils.decoding(data, "UTF-8");
            	Log.i("INFO", "obtainRefCode->onResponse: data:" + str);
            	try
                {
            		JSONObject dataObj = new JSONObject(str);
            		int code = dataObj.optInt("Code", -1);
            		if(code == 0) {
            			 PhoneVerification.this.et_phone_number.setEnabled(false);
                         PhoneVerification.this.tv_vef_resp.setEnabled(false);
                         PhoneVerification.this.tv_vef_resp.setBackgroundColor(-2002081110);
                         PhoneVerification.this.tv_vef_resp.setTextColor(1711276032);
                         
                         final Timer timer = new Timer();
                         timer.schedule(new TimerTask() {

                        	private int currentSecond = 60;
                        	 
							@Override
							public void run() {
								new Handler(Looper.getMainLooper()).post(new Runnable() {

									@Override
									public void run() {
										if (currentSecond <= 0) {
											timer.cancel();
											et_phone_number.setEnabled(true);
					                        tv_vef_resp.setEnabled(true);
					                        tv_vef_resp.setBackgroundColor(-14890607);
					                        tv_vef_resp.setTextColor(-1);
					                        tv_vef_resp.setText("重新获取");
										} else {
											tv_vef_resp.setText((currentSecond--) + "s之后可重新获取");
										}
									}
									
								});
								
							}
                        	 
                         }, 0, 1000);
                         
            		} else {
            			PhoneVerification.this.toast.setText("获取失败，请稍后再试！");
                        PhoneVerification.this.toast.show();
                        Log.i("INFO", "obtainRefCode fail!" + str);
            		}
                } catch (Exception localException) {
                      PhoneVerification.this.toast.setText("数据出现异常: " + localException.getMessage());
                      PhoneVerification.this.toast.show();
                      Log.i("INFO", "obtainRefCode ex: " + localException.toString());
                      Log.i("INFO", "obtainRefCode fail!");
                 }
                
            }
        });
    }
    
    private boolean isLoginSuccess = false;
    
    private void confirm() {
    	if(isLoginSuccess) return;
        String verificationCode = vefityRefCode();
        if(verificationCode == null) {
            return;
        }
        String phone = lastPhoneNumber;
        String id = userId;
        verificationCode = DEncodingUtils.encoding(verificationCode, "UTF-8");
        phone = DEncodingUtils.encoding(phone, "UTF-8");
        id = DEncodingUtils.encoding(id, "UTF-8");
        HashMap<String, String> params = new HashMap<String, String>();
        params.put("Phone", phone);
        params.put("Id", id);
        params.put("VerificationCode", verificationCode);
        DYHttpUtils.getInstance().post().url(Constants.Dianyou_url.URL_POST_PHONE).paramJSONType().params(params).build().execute(new DYStringCallback() {
            
            public void onError(Call call, Exception ex, int id) {
                toast.setText(ex.getMessage());
                toast.show();
            }
            
            public void onResponse(String data, int id) {
                data = DEncodingUtils.decoding(data, "UTF-8");
                Log.i("INFO", data);
                try {
                    JSONObject jsonObj = new JSONObject(data);
                    int code = jsonObj.optInt("Code", -1);
                    if(code == 0) {
                        String phoneId = jsonObj.getString("Id");
                        String phoneType = jsonObj.getString("Type");
                        loginSuccess(phoneId, phoneType);
                        toast.setText("\u767b\u5f55\u6210\u529f\uff01");
                        toast.show();
                        return;
                    }
                    toast.setText("\u9a8c\u8bc1\u5931\u8d25,\u8bf7\u8f93\u5165\u6b63\u786e\u7684\u9a8c\u8bc1\u7801\uff01");
                    toast.show();
                    return;
                } catch(Exception e) {
                    toast.setText(e.getMessage());
                    toast.show();
                    Log.i("INFO", e.toString());
                }
            }
        });
    }
    
    private void loginSuccess(String phoneId, String phoneType) {
    	isLoginSuccess = true;
        XYZApplication.saveInfo(this, Constants.Login.LOGIN_PHONE_ID, phoneId);
        XYZApplication.saveInfo(this, Constants.Login.LOGIN_PHONE_ID_TYPE, phoneType);
        XYZApplication.saveInfo(this, Constants.Login.LOGIN_CURRENT_ID, phoneId);
        XYZApplication.saveInfo(this, Constants.Login.LOGIN_CURRENT_ID_TYPE, phoneType);
        XYZApplication.saveLoginState(this, true);
        String filepath = FileManageUtils.isExistsFile_p2(this, Constants.FileInfo.CURRENT_SIMPLE_ICON_DIR, "phone_user.png");
        Bitmap bmp = BitmapFactory.decodeResource(getResources(), 0x7f020119);
        if(filepath == null) {
            filepath = FileManageUtils.saveBitmap(this, bmp, Constants.FileInfo.CURRENT_SIMPLE_ICON_DIR, "phone_user.png");
        }
        if(filepath != null) {
            XYZApplication.saveInfo(this, Constants.UserInfo.CURRENT_USER_ICON_STR, filepath);
        }
        XYZApplication.saveInfo(this, Constants.UserInfo.CURRENT_USER_NAME, phoneId);
        startActivity(new Intent(this, UserCenter.class));
        ActivityCollectorUtils.finishAndClear(Constants.Activitys.ACTIVITY_LOGIN);
        ActivityCollectorUtils.finishAndClear(Constants.Activitys.ACTIVITY_PHONE_VERIFICATION);
    }
}
